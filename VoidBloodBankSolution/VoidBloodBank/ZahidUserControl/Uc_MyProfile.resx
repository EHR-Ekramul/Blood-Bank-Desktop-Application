<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2ImageButton8.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>